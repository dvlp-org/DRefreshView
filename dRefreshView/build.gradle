apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    //不检查异常
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
repositories {
    flatDir {
        dirs 'libs'   // aar目录
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    // gif播放
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.8'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile(name: "invest_views-release", ext: 'aar')
    // 第三方滑轮控件
    compile 'cn.aigestudio.wheelpicker:WheelPicker:1.1.2'
}
publish {
    repoName='MyMoven'
    userOrg ='dvlp-org'//填写bintray用户名，注意大小写
    groupId = 'com.dvlp'//定义的maven group id最终引用形式
    artifactId = 'DRefreshView'//maven的artifact id
    version = '1.0'//maven 上发布版本号
    description = 'An advanced template project'//描述，自己定义
    website = "https://github.com/dvlp-org/DRefreshView"//项目在github中的地址
}

tasks.withType(Javadoc) {//防止编码问题
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}